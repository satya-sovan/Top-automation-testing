pipeline {
    agent any

    parameters {
        string(name: 'APP_URL', defaultValue: '', description: 'App base URL')
        //string(name: 'SPLUNK_TOKEN', defaultValue: '', description: 'Splunk Token')
        string(name: 'SPLUNK_HOST', defaultValue: '', description: 'Splunk Host')
        string(name: 'SPLUNK_INDEX', defaultValue: '', description: 'Splunk Index')
    }

    environment {
        // These will be overridden in script block
        APP_URL      = ''
        SPLUNK_HOST  = ''
        SPLUNK_INDEX = ''
    }

    stages {
        stage('Checkout Test Repo') {
            steps {
                checkout scm
            }
        }

        stage('Setup Environment') {
            steps {
                withCredentials([string(credentialsId: 'SPLUNK_TOKEN', variable: 'SPLUNK_TOKEN')]) {
                    script {
                        env.APP_URL      = params.APP_URL?.trim() ? params.APP_URL : 'http://host.docker.internal:8080'
                        env.SPLUNK_HOST  = params.SPLUNK_HOST?.trim() ? params.SPLUNK_HOST : 'https://host.docker.internal:9089'
                        env.SPLUNK_INDEX = params.SPLUNK_INDEX?.trim() ? params.SPLUNK_INDEX : 'stopdetails-api'

                        echo "APP_URL: ${env.APP_URL}"
                        echo "SPLUNK_HOST: ${env.SPLUNK_HOST}"
                        echo "SPLUNK_INDEX: ${env.SPLUNK_INDEX}"
                        echo "SPLUNK_TOKEN is set (hidden)"
                    }
                }
            }
        }

        stage('Build & Run Tests') {
            steps {
                withMaven(maven: 'Maven 3') {
                    sh """
                         mvn clean test -D"app.url=${env.APP_URL}"  -D"splunk.token=${env.SPLUNK_TOKEN}"  -D"splunk.host=${env.SPLUNK_HOST}"  -D"splunk.index=${env.SPLUNK_INDEX}"
                    """
                }
            }
        }
    }

    post {
        failure {
            echo 'Automation test failed.'
        }
        success {
            echo 'Automation test passed.'
        }
    }
}
